name: Deploy Vue app to GitHub Pages

on:
  push:
    branches:
      - main
      - readme-update
      - improvments
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  FOUNDRY_PROFILE: ci

jobs:
  build:
    environment: epd
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          ref: ${{ github.ref }}

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Build forge contracts
        run: forge build --silent

      - name: Copy ABIs 
        run: |
          mkdir -p frontend/src/contracts
          jq '.abi' ./out/Registry.sol/Registry.json > frontend/src/contracts/registry_abi.json
          jq '.abi' ./out/Audit.sol/Audit.json > frontend/src/contracts/audit_abi.json

      - name: Deploy Registry contract
        id: deploy_registry
        run: |
          echo "Deploying Registry contract..."
          output=$(forge create src/Registry.sol:Registry --broadcast --slow \
            --rpc-url ${{ secrets.SEPOLIA_RPC }} \
            --private-key ${{ secrets.PRIVATE_KEY }})
          echo "=== Forge Output ==="
          echo "$output"
          deployed_address=$(echo "$output" | grep 'Deployed to:' | awk '{ print $3 }')
          echo "Registry deployed at: $deployed_address"
          echo "REGISTRY_CONTRACT_ADDRESS=$deployed_address" >> $GITHUB_ENV
  
      - name: Deploy Audit contract
        id: deploy_audit
        run: |
          echo "Deploying Audit contract..."
          output=$(forge create src/Audit.sol:Audit --broadcast --slow \
            --rpc-url ${{ secrets.SEPOLIA_RPC }} \
            --private-key ${{ secrets.PRIVATE_KEY }})
          echo "=== Forge Output ==="
          echo "$output"
          deployed_address=$(echo "$output" | grep 'Deployed to:' | awk '{ print $3 }')
          echo "Audit deployed at: $deployed_address"
          echo "AUDIT_CONTRACT_ADDRESS=$deployed_address" >> $GITHUB_ENV
  

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22.14.0

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.9.0

      - name: Install dependencies
        run: pnpm install
        working-directory: frontend

      - name: Create Contracts file with deployed addresses
        run: |
          pnpm exec -- node -e "require('fs').writeFileSync('src/contracts/addresses.json', JSON.stringify({ registry: process.env.REGISTRY_CONTRACT_ADDRESS, audit: process.env.AUDIT_CONTRACT_ADDRESS }, null, 2))"
        working-directory: frontend
        env:
          REGISTRY_CONTRACT_ADDRESS: ${{ env.REGISTRY_CONTRACT_ADDRESS }}
          AUDIT_CONTRACT_ADDRESS: ${{ env.AUDIT_CONTRACT_ADDRESS }}

      - name: Build with Vite
        run: pnpm build
        working-directory: frontend

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: frontend/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
